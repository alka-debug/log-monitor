name: CI Pipeline   # workflow name

on:
  push:
    branches: [ "main" ]   # trigger when we push to main branch
    tags:
      - 'v*'
jobs:
  release:
    runs-on: ubuntu-latest   # runner (like a virtual Linux machine)
    steps:
      - name: create github release
        uses: softprop/action -gh-release@v2
        with:
           tag-name: $ {{ github.ref_name }}
           files: artifacts/*
        env:
          GITHUB_TOKEN: $ {{ secrets.GITHUB_TOKEN }}
       
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make script executable
        run: chmod +x monitor.sh

      - name: Run monitor script
        run: ./monitor.sh
      - name: Fake tests
        run: |
          echo "Running tests..."
          if [ -f monitor.sh ]; then
            echo "Test passed: Script exists"
          else
            echo "Test failed: Script missing" && exit 1
          fi
      - name: Package artifact
        run: |
          mkdir -p artifacts
          cp monitor.sh artifacts/
          echo "Packaged script into artifacts/"
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
        run: |
          mkdir -p deploy
          if [ -f monitor.sh ]; then
            cp monitor.sh deploy/
            echo "Deployed script to deploy/ folder"
          else
            echo "Deploy failed: monitor.sh not found" && exit 1
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployed-scripts
          path: deploy/
         
      - name: Run tests
        run: |
          echo "Running tests..."
          bash monitor.sh || true

      - name: Debug working dir
        run: |
          pwd
          ls -l 
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run:  docker build -t log-monitor . 
        
      - name: Run Docker container (smoke test)
        run:  docker run --rm log-monitor echo "Container started OK"
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
         registry: ghcr.io
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: |
            IMAGE_NAME=ghcr.io/${{ github.actor }}/log-monitor:latest
            docker tag log-monitor ghcr.io/${{ github.actor }}/log-monitor:latest
            docker push ghcr.io/${{ github.actor }}/log-monitor:latest


            


